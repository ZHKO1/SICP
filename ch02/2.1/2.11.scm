(load "SICP/ch02/2.1/2.7.scm")
(load "SICP/ch02/2.1/2.8.scm")

(define x (make-interval 10 20))
(define y (make-interval 10 20))

;先判断upper-bound和 lower-bound 的正负
(define (judge-catagory interval)
  (cond ((and (< (lower-bound interval) 0) (< (upper-bound interval) 0))
          1)
        ((and (< (lower-bound interval) 0) (> (upper-bound interval) 0))
          2)
        ((and (>= (lower-bound interval) 0) (>= (upper-bound interval) 0))
          3)))


(define (mul-interval x y)
  (cond ((and (= 1 (judge-catagory x)) (= 1 (judge-catagory y)))
          (make-interval (* (upper-bound x) (upper-bound y)) (* (lower-bound x) (lower-bound y))))
        ((and (= 1 (judge-catagory x)) (= 2 (judge-catagory y)))
          (make-interval (* (lower-bound x) (upper-bound y)) (* (lower-bound x) (lower-bound y))))
        ((and (= 1 (judge-catagory x)) (= 3 (judge-catagory y)))
          (make-interval (* (lower-bound x) (upper-bound y)) (* (upper-bound x) (lower-bound y))))
        ((and (= 2 (judge-catagory x)) (= 1 (judge-catagory y)))
          (make-interval (* (upper-bound x) (lower-bound y)) (* (lower-bound x) (lower-bound y))))
        ((and (= 2 (judge-catagory x)) (= 2 (judge-catagory y)))
          (make-interval (min (* (lower-bound x) (lower-bound y))
                              (* (upper-bound x) (lower-bound y)) )
                         (max (* (lower-bound x) (lower-bound y))
                              (* (upper-bound x) (lower-bound y)))))
        ((and (= 2 (judge-catagory x)) (= 3 (judge-catagory y)))
          (make-interval (* (lower-bound x) (upper-bound y)) (* (upper-bound x) (upper-bound y))))
        ((and (= 3 (judge-catagory x)) (= 1 (judge-catagory y)))
          (make-interval (* (upper-bound x) (lower-bound y)) (* (lower-bound x) (upper-bound y))))
        ((and (= 3 (judge-catagory x)) (= 2 (judge-catagory y)))
          (make-interval (* (upper-bound x) (lower-bound y)) (* (upper-bound x) (upper-bound y))))
        ((and (= 3 (judge-catagory x)) (= 3 (judge-catagory y)))
          (make-interval (* (lower-bound x) (lower-bound y)) (* (upper-bound x) (upper-bound y))))
      )
  )

(mul-interval x y)